{"version":3,"sources":["scripts/main.js"],"names":["startButton","document","querySelector","cells","querySelectorAll","field","score","loseMessage","winMessage","allMessages","gameField","getRandomValue","value","Math","floor","random","addRandomCell","row","cell","renderGame","r","length","rows","c","gameCell","className","textContent","classList","add","filterZeroes","filter","moveCells","cellsRow","push","moveLeft","i","moveRight","reverse","moveUp","moveDown","checkWin","some","contains","remove","checkLose","noMovesVertical","noMovesHorizontal","every","addEventListener","map","message","blur","key","copyGameField","JSON","parse","stringify","code"],"mappings":"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","file":"main.6ff28c82.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst startButton = document.querySelector('.button');\nconst cells = document.querySelectorAll('.field-cell');\nconst field = document.querySelector('.game-field');\nconst score = document.querySelector('.game-score');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\nconst allMessages = document.querySelectorAll('.message');\n\nconst gameField = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nstartButton.addEventListener('click', () => {\n  if (startButton.classList.contains('start')) {\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n    startButton.textContent = 'Restart';\n  }\n\n  for (let r = 0; r < gameField.length; r++) {\n    for (let c = 0; c < gameField[r].length; c++) {\n      gameField[r][c] = 0;\n    }\n  }\n\n  [...cells].map(cell => {\n    cell.className = 'field-cell';\n    cell.textContent = '';\n  });\n\n  [...allMessages].map(message => message.classList.add('hidden'));\n\n  score.textContent = 0;\n\n  addRandomCell();\n  addRandomCell();\n  renderGame();\n\n  startButton.blur();\n});\n\ndocument.addEventListener('keyup', key => {\n  if (startButton.classList.contains('start')) {\n    return 0;\n  }\n\n  const copyGameField = JSON.parse(JSON.stringify(gameField));\n\n  switch (key.code) {\n    case 'ArrowUp':\n      moveUp();\n      break;\n    case 'ArrowDown':\n      moveDown();\n      break;\n    case 'ArrowLeft':\n      moveLeft();\n      break;\n    case 'ArrowRight':\n      moveRight();\n      break;\n    default:\n      return 0;\n  }\n\n  if (JSON.stringify(copyGameField) === JSON.stringify(gameField)) {\n    return;\n  }\n\n  addRandomCell();\n  renderGame();\n\n  checkWin();\n  checkLose();\n});\n\nfunction getRandomValue() {\n  let value = 2;\n  const randomPercent = Math.floor(Math.random() * 100);\n\n  if (randomPercent >= 90) {\n    value = 4;\n  }\n\n  return value;\n}\n\nfunction addRandomCell() {\n  let row = Math.floor(Math.random() * 4);\n  let cell = Math.floor(Math.random() * 4);\n\n  while (gameField[row][cell] !== 0) {\n    row = Math.floor(Math.random() * 4);\n    cell = Math.floor(Math.random() * 4);\n  }\n\n  gameField[row][cell] = getRandomValue();\n}\n\nfunction renderGame() {\n  for (let r = 0; r < gameField.length; r++) {\n    const row = field.rows[r];\n\n    for (let c = 0; c < gameField[r].length; c++) {\n      const gameCell = row.cells[c];\n\n      gameCell.className = 'field-cell';\n      gameCell.textContent = '';\n\n      if (gameField[r][c] !== 0) {\n        gameCell.classList.add(`field-cell--${gameField[r][c]}`);\n        gameCell.textContent = gameField[r][c];\n      }\n    }\n  }\n}\n\nfunction filterZeroes(row) {\n  return row.filter(cell => cell !== 0);\n};\n\nfunction moveCells(row) {\n  let cellsRow = filterZeroes(row);\n\n  for (let c = 0; c < cellsRow.length - 1; c++) {\n    if (cellsRow[c] === cellsRow[c + 1]) {\n      cellsRow[c] *= 2;\n      cellsRow[c + 1] = 0;\n      score.textContent = (+score.textContent) + (+cellsRow[c]);\n    }\n  }\n\n  cellsRow = filterZeroes(cellsRow);\n\n  while (cellsRow.length < gameField.length) {\n    cellsRow.push(0);\n  }\n\n  return cellsRow;\n}\n\nfunction moveLeft() {\n  for (let i = 0; i < gameField.length; i++) {\n    let row = gameField[i];\n\n    row = moveCells(row);\n    gameField[i] = row;\n  }\n};\n\nfunction moveRight() {\n  for (let i = 0; i < gameField.length; i++) {\n    let row = gameField[i].reverse();\n\n    row = moveCells(row);\n    gameField[i] = row.reverse();\n  }\n};\n\nfunction moveUp() {\n  for (let i = 0; i < gameField.length; i++) {\n    let row = [\n      gameField[0][i],\n      gameField[1][i],\n      gameField[2][i],\n      gameField[3][i],\n    ];\n\n    row = moveCells(row);\n    gameField[0][i] = row[0];\n    gameField[1][i] = row[1];\n    gameField[2][i] = row[2];\n    gameField[3][i] = row[3];\n  }\n};\n\nfunction moveDown() {\n  for (let i = 0; i < gameField.length; i++) {\n    let row = [\n      gameField[0][i],\n      gameField[1][i],\n      gameField[2][i],\n      gameField[3][i],\n    ];\n\n    row = row.reverse();\n    row = moveCells(row);\n    row = row.reverse();\n\n    gameField[0][i] = row[0];\n    gameField[1][i] = row[1];\n    gameField[2][i] = row[2];\n    gameField[3][i] = row[3];\n  }\n};\n\nfunction checkWin() {\n  if ([...cells].some(cell => cell.classList.contains('field-cell--2048'))) {\n    winMessage.classList.remove('hidden');\n  }\n}\n\nfunction checkLose() {\n  let noMovesVertical = true;\n  let noMovesHorizontal = true;\n\n  for (let r = 0; r < gameField.length; r++) {\n    for (let c = 0; c < gameField.length - 1; c++) {\n      if (gameField[r][c] === gameField[r][c + 1]) {\n        noMovesHorizontal = false;\n\n        return;\n      }\n    }\n  }\n\n  for (let r = 0; r < gameField.length; r++) {\n    const row = [\n      gameField[0][r], gameField[1][r], gameField[2][r], gameField[3][r],\n    ];\n\n    for (let c = 0; c < row.length - 1; c++) {\n      if (row[c] === row[c + 1]) {\n        noMovesVertical = false;\n\n        return;\n      }\n    }\n  }\n\n  if (\n    gameField.every(row => row.every(cell => cell !== 0))\n    && noMovesHorizontal\n    && noMovesVertical\n  ) {\n    loseMessage.classList.remove('hidden');\n  }\n}\n"]}